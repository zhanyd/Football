package com.wildwolf.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class UserlogExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USERLOG
     *
     * @mbggenerated Thu Jan 24 13:11:20 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USERLOG
     *
     * @mbggenerated Thu Jan 24 13:11:20 CST 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USERLOG
     *
     * @mbggenerated Thu Jan 24 13:11:20 CST 2013
     */
    protected List oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERLOG
     *
     * @mbggenerated Thu Jan 24 13:11:20 CST 2013
     */
    public UserlogExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERLOG
     *
     * @mbggenerated Thu Jan 24 13:11:20 CST 2013
     */
    protected UserlogExample(UserlogExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
        this.distinct = example.distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERLOG
     *
     * @mbggenerated Thu Jan 24 13:11:20 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERLOG
     *
     * @mbggenerated Thu Jan 24 13:11:20 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERLOG
     *
     * @mbggenerated Thu Jan 24 13:11:20 CST 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERLOG
     *
     * @mbggenerated Thu Jan 24 13:11:20 CST 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERLOG
     *
     * @mbggenerated Thu Jan 24 13:11:20 CST 2013
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERLOG
     *
     * @mbggenerated Thu Jan 24 13:11:20 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERLOG
     *
     * @mbggenerated Thu Jan 24 13:11:20 CST 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERLOG
     *
     * @mbggenerated Thu Jan 24 13:11:20 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERLOG
     *
     * @mbggenerated Thu Jan 24 13:11:20 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USERLOG
     *
     * @mbggenerated Thu Jan 24 13:11:20 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USERLOG
     *
     * @mbggenerated Thu Jan 24 13:11:20 CST 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected GeneratedCriteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIDIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIDIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIDEqualTo(String value) {
            addCriterion("ID =", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotEqualTo(String value) {
            addCriterion("ID <>", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDGreaterThan(String value) {
            addCriterion("ID >", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDGreaterThanOrEqualTo(String value) {
            addCriterion("ID >=", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDLessThan(String value) {
            addCriterion("ID <", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDLessThanOrEqualTo(String value) {
            addCriterion("ID <=", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDLike(String value) {
            addCriterion("ID like", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotLike(String value) {
            addCriterion("ID not like", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDIn(List values) {
            addCriterion("ID in", values, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotIn(List values) {
            addCriterion("ID not in", values, "ID");
            return (Criteria) this;
        }

        public Criteria andIDBetween(String value1, String value2) {
            addCriterion("ID between", value1, value2, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotBetween(String value1, String value2) {
            addCriterion("ID not between", value1, value2, "ID");
            return (Criteria) this;
        }

        public Criteria andUSERNAMEIsNull() {
            addCriterion("USERNAME is null");
            return (Criteria) this;
        }

        public Criteria andUSERNAMEIsNotNull() {
            addCriterion("USERNAME is not null");
            return (Criteria) this;
        }

        public Criteria andUSERNAMEEqualTo(String value) {
            addCriterion("USERNAME =", value, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andUSERNAMENotEqualTo(String value) {
            addCriterion("USERNAME <>", value, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andUSERNAMEGreaterThan(String value) {
            addCriterion("USERNAME >", value, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andUSERNAMEGreaterThanOrEqualTo(String value) {
            addCriterion("USERNAME >=", value, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andUSERNAMELessThan(String value) {
            addCriterion("USERNAME <", value, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andUSERNAMELessThanOrEqualTo(String value) {
            addCriterion("USERNAME <=", value, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andUSERNAMELike(String value) {
            addCriterion("USERNAME like", value, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andUSERNAMENotLike(String value) {
            addCriterion("USERNAME not like", value, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andUSERNAMEIn(List values) {
            addCriterion("USERNAME in", values, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andUSERNAMENotIn(List values) {
            addCriterion("USERNAME not in", values, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andUSERNAMEBetween(String value1, String value2) {
            addCriterion("USERNAME between", value1, value2, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andUSERNAMENotBetween(String value1, String value2) {
            addCriterion("USERNAME not between", value1, value2, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andOPERATIONIsNull() {
            addCriterion("OPERATION is null");
            return (Criteria) this;
        }

        public Criteria andOPERATIONIsNotNull() {
            addCriterion("OPERATION is not null");
            return (Criteria) this;
        }

        public Criteria andOPERATIONEqualTo(String value) {
            addCriterion("OPERATION =", value, "OPERATION");
            return (Criteria) this;
        }

        public Criteria andOPERATIONNotEqualTo(String value) {
            addCriterion("OPERATION <>", value, "OPERATION");
            return (Criteria) this;
        }

        public Criteria andOPERATIONGreaterThan(String value) {
            addCriterion("OPERATION >", value, "OPERATION");
            return (Criteria) this;
        }

        public Criteria andOPERATIONGreaterThanOrEqualTo(String value) {
            addCriterion("OPERATION >=", value, "OPERATION");
            return (Criteria) this;
        }

        public Criteria andOPERATIONLessThan(String value) {
            addCriterion("OPERATION <", value, "OPERATION");
            return (Criteria) this;
        }

        public Criteria andOPERATIONLessThanOrEqualTo(String value) {
            addCriterion("OPERATION <=", value, "OPERATION");
            return (Criteria) this;
        }

        public Criteria andOPERATIONLike(String value) {
            addCriterion("OPERATION like", value, "OPERATION");
            return (Criteria) this;
        }

        public Criteria andOPERATIONNotLike(String value) {
            addCriterion("OPERATION not like", value, "OPERATION");
            return (Criteria) this;
        }

        public Criteria andOPERATIONIn(List values) {
            addCriterion("OPERATION in", values, "OPERATION");
            return (Criteria) this;
        }

        public Criteria andOPERATIONNotIn(List values) {
            addCriterion("OPERATION not in", values, "OPERATION");
            return (Criteria) this;
        }

        public Criteria andOPERATIONBetween(String value1, String value2) {
            addCriterion("OPERATION between", value1, value2, "OPERATION");
            return (Criteria) this;
        }

        public Criteria andOPERATIONNotBetween(String value1, String value2) {
            addCriterion("OPERATION not between", value1, value2, "OPERATION");
            return (Criteria) this;
        }

        public Criteria andOPERATIONTIMEIsNull() {
            addCriterion("OPERATIONTIME is null");
            return (Criteria) this;
        }

        public Criteria andOPERATIONTIMEIsNotNull() {
            addCriterion("OPERATIONTIME is not null");
            return (Criteria) this;
        }

        public Criteria andOPERATIONTIMEEqualTo(Date value) {
            addCriterion("OPERATIONTIME =", value, "OPERATIONTIME");
            return (Criteria) this;
        }

        public Criteria andOPERATIONTIMENotEqualTo(Date value) {
            addCriterion("OPERATIONTIME <>", value, "OPERATIONTIME");
            return (Criteria) this;
        }

        public Criteria andOPERATIONTIMEGreaterThan(Date value) {
            addCriterion("OPERATIONTIME >", value, "OPERATIONTIME");
            return (Criteria) this;
        }

        public Criteria andOPERATIONTIMEGreaterThanOrEqualTo(Date value) {
            addCriterion("OPERATIONTIME >=", value, "OPERATIONTIME");
            return (Criteria) this;
        }

        public Criteria andOPERATIONTIMELessThan(Date value) {
            addCriterion("OPERATIONTIME <", value, "OPERATIONTIME");
            return (Criteria) this;
        }

        public Criteria andOPERATIONTIMELessThanOrEqualTo(Date value) {
            addCriterion("OPERATIONTIME <=", value, "OPERATIONTIME");
            return (Criteria) this;
        }

        public Criteria andOPERATIONTIMEIn(List values) {
            addCriterion("OPERATIONTIME in", values, "OPERATIONTIME");
            return (Criteria) this;
        }

        public Criteria andOPERATIONTIMENotIn(List values) {
            addCriterion("OPERATIONTIME not in", values, "OPERATIONTIME");
            return (Criteria) this;
        }

        public Criteria andOPERATIONTIMEBetween(Date value1, Date value2) {
            addCriterion("OPERATIONTIME between", value1, value2, "OPERATIONTIME");
            return (Criteria) this;
        }

        public Criteria andOPERATIONTIMENotBetween(Date value1, Date value2) {
            addCriterion("OPERATIONTIME not between", value1, value2, "OPERATIONTIME");
            return (Criteria) this;
        }

        public Criteria andCREATETIMEIsNull() {
            addCriterion("CREATETIME is null");
            return (Criteria) this;
        }

        public Criteria andCREATETIMEIsNotNull() {
            addCriterion("CREATETIME is not null");
            return (Criteria) this;
        }

        public Criteria andCREATETIMEEqualTo(Date value) {
            addCriterion("CREATETIME =", value, "CREATETIME");
            return (Criteria) this;
        }

        public Criteria andCREATETIMENotEqualTo(Date value) {
            addCriterion("CREATETIME <>", value, "CREATETIME");
            return (Criteria) this;
        }

        public Criteria andCREATETIMEGreaterThan(Date value) {
            addCriterion("CREATETIME >", value, "CREATETIME");
            return (Criteria) this;
        }

        public Criteria andCREATETIMEGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATETIME >=", value, "CREATETIME");
            return (Criteria) this;
        }

        public Criteria andCREATETIMELessThan(Date value) {
            addCriterion("CREATETIME <", value, "CREATETIME");
            return (Criteria) this;
        }

        public Criteria andCREATETIMELessThanOrEqualTo(Date value) {
            addCriterion("CREATETIME <=", value, "CREATETIME");
            return (Criteria) this;
        }

        public Criteria andCREATETIMEIn(List values) {
            addCriterion("CREATETIME in", values, "CREATETIME");
            return (Criteria) this;
        }

        public Criteria andCREATETIMENotIn(List values) {
            addCriterion("CREATETIME not in", values, "CREATETIME");
            return (Criteria) this;
        }

        public Criteria andCREATETIMEBetween(Date value1, Date value2) {
            addCriterion("CREATETIME between", value1, value2, "CREATETIME");
            return (Criteria) this;
        }

        public Criteria andCREATETIMENotBetween(Date value1, Date value2) {
            addCriterion("CREATETIME not between", value1, value2, "CREATETIME");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USERLOG
     *
     * @mbggenerated do_not_delete_during_merge Thu Jan 24 13:11:20 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}